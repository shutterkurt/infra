---
myhostname: mummy

# grog.package - extra packages for this group/server
package_list_group:
  - name: build-essential
  - name: iftop
  - name: iotop
  - name: lm-sensors
  - name: smartmontools
  - name: cryptsetup
  - name: zfsutils-linux

# geerlingguy-pip
pip_install_packages:
  - name: docker

# ironicbadger-snapraid
# remember if absolute path, then starts at the 'array root'
# in my case this is '/mnt/d1', '/mnt/d2', etc
snapraid_config_excludes:
  - '*.unrecoverable'
  - '/tmp/'
  - '/lost+found/'
  - 'downloads/'
  - 'node_modules/'
  - '*.!sync'
  - '.AppleDouble'
  - '._AppleDouble'
  - '.DS_Store'
  - '._.DS_Store'
  - '.Thumbs.db'
  - '.fseventsd'
  - '.Spotlight-V100'
  - '.TemporaryItems'
  - '.Trashes'
  - '.AppleDB'
  - '/appdata/heimdall/'
  - '/appdata/synchthing/'
  - '/appdata/grafana'

###############################################################
snapraid_force_install: false
snapraid_bin_path: /usr/local/bin/snapraid
snapraid_config_path: /etc/snapraid.conf
snapraid_runner: true
# default snapraid_runner_path: /opt/snapraid-runner/snapraid-runner
# logs into /opt/snapraid-runner/snapraid.log

snapraid_runner_healthcheck_io_uuid: '{{ secrets_mummy_snapraid_runner_hc_uuid }}'
# keep this empty to disable any default hc ping
# snapraid_runner_healthcheck_io_uuid: ''
snapraid_runner_email_address: ''
snapraid_runner_gmail_pass: ''
snapraid_runner_email_sendon: 'error'
snapraid_runner_smtp_host: '' # keep empty to short circuit email sending
# snapraid_runner_smtp_host: smtp.gmail.com

# use a snapraid runner command so not to send anything to hc - will still get email on error once setup
# THINK: perhaps move this to shell script to also just pass the script rtnval to hc?
snapraid_runner_command: 'python3 {{ snapraid_runner_bin }} -c {{ snapraid_runner_conf }} > /dev/null {% if snapraid_runner_healthcheck_io_uuid %} && curl -fsS -m 10 --retry 5 -o /dev/null {{ snapraid_healthcheck_io_host }}/{{ snapraid_runner_healthcheck_io_uuid }} > /dev/null {% endif %}'
# # snapraid_runner_command basically this:
# # with url = the hchost/uuid
# #  curl -fsS -m 10 --retry 5 -o /dev/null --data-binary '@-' <url> > /dev/null
# # -fsS  fail, silent, Show error
# # -m 10 --retry 5    10 sec timeout, retry 5 times
# # -o /dev/null    don't show stdout
# # --data-binary '@-'  insert stdin capture (since pipe | is used) into the hc log  REMOVED
# snapraid_runner_cron_jobs:
#   - { job: '{{ snapraid_runner_command }}', name: 'snapraid_runner', weekday: '*', hour: '01' }

# snapraid disk setup - must follow the drivesetup_drives
snapraid_parity_disks:
  - path: /mnt/par1 # where the disk is
    content: false # enables the snapraid content file on this disk
snapraid_data_disks:
  - path: /mnt/dat1
    content: true
  - path: /mnt/dat2
    content: true
  - path: /mnt/dat3
    content: true
  - path: /mnt/dat4
    content: true

# initial mapping:
# 2T SAS  /dev/disk/by-id/scsi-35000cca06d15906c -> ../../sdb
# 2T SAS  /dev/disk/by-id/scsi-35000cca06d159054 -> ../../sdc
# 2T SAS  /dev/disk/by-id/scsi-35000cca06d11fcb8 -> ../../sdd
# 2T SAS  /dev/disk/by-id/scsi-35000cca06d12ac50 -> ../../sde
# 4T SATA /dev/disk/by-id/ata-WDC_WD40EFRX-68N32N0_WD-WCC7K4YFTS7L -> ../../sdg

drivesetup_drives:
  - device: /dev/disk/by-id/scsi-35000cca06d15906c
    name: dat1
    path: /mnt/dat1
    label: DAT1
    keyfile: '{{ disckey }}'
    mkfs_type: ext4
  - device: /dev/disk/by-id/scsi-35000cca06d159054
    name: dat2
    path: /mnt/dat2
    label: DAT2
    keyfile: '{{ disckey }}'
    mkfs_type: ext4
  - device: /dev/disk/by-id/scsi-35000cca06d11fcb8
    name: dat3
    path: /mnt/dat3
    label: DAT3
    keyfile: '{{ disckey }}'
    mkfs_type: ext4
  - device: /dev/disk/by-id/scsi-35000cca06d12ac50
    name: dat4
    path: /mnt/dat4
    label: DAT4
    keyfile: '{{ disckey }}'
    mkfs_type: ext4
  - device: /dev/disk/by-id/ata-WDC_WD40EFRX-68N32N0_WD-WCC7K4YFTS7L
    name: par1
    path: /mnt/par1
    label: PAR1
    keyfile: '{{ disckey }}'
    mkfs_type: ext4

# shutterkurt-mergerfs role
# insert mergerfs item into fstab
mergerfs_fstab_info:
  - {
      # source: '/mnt/dat*:/mnt/tank/docs-shared:/mnt/tank/photo-wip',
      source: '/mnt/dat*',
      mountpoint: '/mnt/storage',
      fs: fuse.mergerfs,
      opts: 'defaults,nonempty,allow_other,use_ino,moveonenospc=true,category.create=mfs,cache.files=off,dropcacheonclose=true,minfreespace=20G,fsname=mergerfs',
    }
# install or not the extra python tools with mergerfs
mergerfs_tools_install: true

# shutterkurt-filesharing
filesharing_shares:
  - {
      name: storage,
      comment: Bulk Storage Share,
      path: /mnt/storage,
      browseable: yes,
      read_only: no,
      guest_ok: yes,
    }

filesharing_samba_users:
  - { name: '{{ main_username }}', password: '{{ secrets_main_sambapw }}' }

# shutterkurt-zsh
# assumes install of oh-my-zsh and powerlevel10K prompt
# zsh-syntax-highlighting needs to be last! (must be last to hook into cmd line)
zsh_user_configs:
  - username: '{{ main_username }}'
    group: '{{ main_groupname }}'
    antigen_bundles:
      - git
      - zsh-users/zsh-syntax-highlighting

# TODO: figure out what to move to the higher level all.yaml

# ironicbadger.docker_compose_generator
appdata_path: /mnt/storage/appdata

# shutterkurt-services
services_stacks_dir: 'compose/stack*.yaml'

# shutterkurt-mummy
# if docker storage on zfs could have a race condition
# currently this is not the case
docker_zfs_override: false
